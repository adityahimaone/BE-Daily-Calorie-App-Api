// Code generated by mockery v2.10.0. DO NOT EDIT.

package mocks

import (
	foodsAPI "Daily-Calorie-App-API/business/foodsAPI"

	mock "github.com/stretchr/testify/mock"
)

// Repository is an autogenerated mock type for the Repository type
type Repository struct {
	mock.Mock
}

// GetFoodByName provides a mock function with given fields: name
func (_m *Repository) GetFoodByName(name string) (*[]foodsAPI.Domain, error) {
	ret := _m.Called(name)

	var r0 *[]foodsAPI.Domain
	if rf, ok := ret.Get(0).(func(string) *[]foodsAPI.Domain); ok {
		r0 = rf(name)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*[]foodsAPI.Domain)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(name)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetMealPlan provides a mock function with given fields: food
func (_m *Repository) GetMealPlan(food *foodsAPI.Domain) (*[]foodsAPI.DomainRecipe, error) {
	ret := _m.Called(food)

	var r0 *[]foodsAPI.DomainRecipe
	if rf, ok := ret.Get(0).(func(*foodsAPI.Domain) *[]foodsAPI.DomainRecipe); ok {
		r0 = rf(food)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*[]foodsAPI.DomainRecipe)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*foodsAPI.Domain) error); ok {
		r1 = rf(food)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
